<?xml version="1.0"?>

<launch>

   

    <arg name="output" value="screen" />

    <node name="CeilCamSimulator" pkg="ohm_pf" type="CeilCamSimulator" output="$(arg output)" />

    <node pkg="turtlebot_teleop" type="turtlebot_teleop_key" name="turtlebot_teleop_keyboard" output="$(arg output)" launch-prefix="xterm -e">
        <param name="scale_linear" value="1.0" type="double" />
        <param name="scale_angular" value="1.5" type="double" />
        <remap from="turtlebot_teleop_keyboard/cmd_vel" to="robot0/cmd_vel" />
    </node>

    <include file="$(find ohm_pf)/launch/ohm_pf.launch">
    <arg name="output" value="screen" />
    <arg name="tfFixedFrame" value="pfMap" />
    <arg name="tfBaseFootprintFrame" value="robot0" />
    <arg name="tfOdomFrame" value="world" />
    <arg name="topOdometry" value="/robot0/odom" />
    <arg name="top2dPoseEst" value="initialpose" />
    <arg name="topCeilCam" value="ceilCamPoseArray_OFF" />
    <arg name="topMap" value="map" />
    <arg name="topMapSrv" value="static_map" />
    <arg name="samplesMax" value="5000" />
    <arg name="samplesMin" value="50" />
    <arg name="topScan" value="/robot0/laser_0;/robot0/laser_1" />
    <arg name="maxDistanceProbMap" value="60" />
    <arg name="subsamplingRateLaser" value="5" />
    <arg name="uncertaintyLaser" value="0.3" />
    <arg name="resamplingMethod" value="STD" />
    <arg name="initX" value="2.0" />
    <arg name="initY" value="2.0" />
    <arg name="initPhi" value="0.0" />
    <arg name="initSigmaTrans" value="0.1" />
    <arg name="initSigmaRot" value="0.1" />
    <arg name="initMode" value="GL" />
    <arg name="OCSThresholdLaser" value="0.2" />
    <arg name="OCSThresholdOdom" value="0.001" />
    <arg name="OCSThresholdResampler" value="0.2" />
    <arg name="countLasers" value="2" />
    <arg name="skipParticleForGui" value="10" />
    <arg name="resamplingIntervallFilter" value="0.5" />
    <arg name="outputIntervallFilter" value="0.1" />
    <arg name="filterLoopRate" value="20" />
    </include>

    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find ohm_pf)/rviz/ohm_pf_stdr.rviz" />

    <!-- stdr -->
    <include file="$(find stdr_robot)/launch/robot_manager.launch" />
    <node type="stdr_server_node" pkg="stdr_server" name="stdr_server" output="screen" args="$(find stdr_resources)/maps/sparse_obstacles.yaml" />
    <node pkg="tf" type="static_transform_publisher" name="world2map" args="0 0 0 0 0 0  world map 100" />
    <!-- <include file="$(find stdr_gui)/launch/stdr_gui.launch" /> -->
    <node pkg="stdr_robot" type="robot_handler" name="$(anon robot_spawn)" args="add $(find ohm_pf)/launch/pandora_robot_2_scanner.yaml 2 2 0" />

    <node name="mapServer" pkg="map_server" type="map_server" args="$(find stdr_resources)/maps/sparse_obstacles.yaml">
	<param name="frame_id" type="string" value="pfMap"/>
    </node>

</launch>
