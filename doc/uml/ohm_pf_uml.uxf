<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.3">
  <zoom_level>7</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>560</x>
      <y>231</y>
      <w>133</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Struct&gt;&gt;
ohmPf::Sample_t
--
pose : Eigen::Vector3d
weight : std::double</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>539</x>
      <y>329</y>
      <w>189</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>ohmPf::SampleSet
--
- _samples : std::vektor&lt;Sample_t&gt;
- _countSamples : std::int
- (_stamp : std::time)
- (info about samples kd-tree; nn; timestamp)
--
+ normalize() : std::bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>623</x>
      <y>280</y>
      <w>35</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
2..n</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>777</x>
      <y>350</y>
      <w>238</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>ohmPf::Filter
--
- _map : ohmPf::map*
--
//initialization
+ initWithMap(map : ohmPf::map) : std::bool
+ initWithPose(pose : ohmPf::pose) : std::bool
+ getMap() : ohmPf::map*
+ updateMap(map : ohmPf::map) : std::bool
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>973</x>
      <y>455</y>
      <w>266</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>&lt;Abstract&gt;
/ohmPf::Map/
--

--
+ createProbFieldFromMap() : std::bool
+ getProbOfPosition(x, y : std::double) : std::double
+ isOccupied(x, y : std::double) : std::bool
+ loadMapFromFile(filename : std::string) : bool
+ storeMapOnFile(filename : std::string) : bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>182</x>
      <y>210</y>
      <w>147</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Struct&gt;&gt;
ohmPf::Pose_t
--
pose : Eigen::Vector
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1071</x>
      <y>126</y>
      <w>350</w>
      <h>280</h>
    </coordinates>
    <panel_attributes>TODO
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>490</x>
      <y>497</y>
      <w>245</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Abstract&gt;&gt;
/ohmPf::Sensor/
--

--
+ updateFilter(filter : ohmPf::Filter *) : std::bool
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>609</x>
      <y>602</y>
      <w>280</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>ohmPf::OdometryDiff
--
- _params : ohmPf::OdomParams
--
+ setParams(params : ohmPf::OdomParams) : bool
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>910</x>
      <y>252</y>
      <w>112</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Struct&gt;&gt;
ohmPf::odomParams
--
a1 : std::double
a2 : std::double
...</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>315</x>
      <y>602</y>
      <w>280</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>ohmPf::Laser2d
--
- _params : ohmPf::LaserParams
--
+ setParams(params : ohmPf::OdomParams) : bool
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>329</x>
      <y>497</y>
      <w>126</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Struct&gt;&gt;
ohmPf::Laser2dParams
--
zhit : std::double
zphi : std::double
...</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>931</x>
      <y>602</y>
      <w>168</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>ohmPf::TsdMap
--
- _map : obviously::tsdGrid &lt;-- ?
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1113</x>
      <y>602</y>
      <w>168</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>ohmPf::OccMap
--
- _map : obviously::tsdGrid &lt;-- ?
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1008</x>
      <y>560</y>
      <w>21</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1183</x>
      <y>560</y>
      <w>21</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>651</x>
      <y>560</y>
      <w>21</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>525</x>
      <y>560</y>
      <w>21</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>777</x>
      <y>252</y>
      <w>112</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Struct&gt;&gt;
ohmPf::PfParams
--
sampleMin : std::int
sampleMax : std::int
...</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>315</x>
      <y>693</y>
      <w>413</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>ohmPf::GaussianPdf
--

--
+ getRandomSample(mu : std::double, sigma std::double) : std::double)
+ getProbability(x : std::double, mu : std::double, sigma std::double) : std::double)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>91</y>
      <w>350</w>
      <h>280</h>
    </coordinates>
    <panel_attributes>Ablage
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7</x>
      <y>119</y>
      <w>147</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>ohmPf::Pose_t
--
+ _pose : Eigen::Vector
--
+ getPhiRad() : std::double
+ getPhiDeg() : std::double
+ getX() : std::double
+ getY() : std::double
+ getPose() : Eigen::Vector</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>182</x>
      <y>133</y>
      <w>126</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>ohmPf::Sample_t
--
- _pose : omhPf::Pose_t
- _weight : std::double</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
