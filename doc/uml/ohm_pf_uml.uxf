<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.3">
  <zoom_level>9</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>675</x>
      <y>243</y>
      <w>171</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Struct&gt;&gt;
ohmPf::Sample_t
--
pose : Eigen::Vector3d
weight : std::double</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>648</x>
      <y>369</y>
      <w>297</w>
      <h>117</h>
    </coordinates>
    <panel_attributes>ohmPf::SampleSet
--
- _samples : std::vektor&lt;Sample_t&gt;
- _countSamples : std::int
- (_stamp : std::time)
- (info about samples kd-tree; nn; timestamp)
--
+ normalize() : std::bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>756</x>
      <y>306</y>
      <w>45</w>
      <h>81</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
2..n</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>999</x>
      <y>396</y>
      <w>306</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>ohmPf::Filter
--
- _map : ohmPf::map*
--
//initialization
+ initWithMap(map : ohmPf::map) : std::bool
+ initWithPose(pose : Eigen::vektor3d) : std::bool
+ getMap() : ohmPf::map*
+ updateMap(map : ohmPf::map) : std::bool
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1251</x>
      <y>531</y>
      <w>342</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>&lt;Abstract&gt;
/ohmPf::Map/
--

--
+ createProbFieldFromMap() : std::bool
+ getProbOfPosition(x, y : std::double) : std::double
+ isOccupied(x, y : std::double) : std::bool
+ loadMapFromFile(filename : std::string) : bool
+ storeMapOnFile(filename : std::string) : bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>234</x>
      <y>216</y>
      <w>189</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Struct&gt;&gt;
ohmPf::Pose_t
--
pose : Eigen::Vector
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1377</x>
      <y>108</y>
      <w>450</w>
      <h>360</h>
    </coordinates>
    <panel_attributes>TODO
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>675</x>
      <y>504</y>
      <w>315</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Abstract&gt;&gt;
/ohmPf::Sensor/
--

--
+ updateFilter(filter : ohmPf::Filter *) : std::bool
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>450</x>
      <y>612</y>
      <w>360</w>
      <h>81</h>
    </coordinates>
    <panel_attributes>ohmPf::OdomDiff
--
- _params : ohmPf::OdomParams
--
+ setParams(params : ohmPf::OdomParams) : bool
+ updateFilter(filter : ohmPf::Filter *) : std::bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1170</x>
      <y>270</y>
      <w>189</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Struct&gt;&gt;
ohmPf::OdomDiffParams
--
a1 : std::double
a2 : std::double
...</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>855</x>
      <y>612</y>
      <w>360</w>
      <h>81</h>
    </coordinates>
    <panel_attributes>ohmPf::Laser2d
--
- _params : ohmPf::LaserParams
--
+ setParams(params : ohmPf::OdomParams) : bool
+ updateFilter(filter : ohmPf::Filter *) : std::bool
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>243</x>
      <y>702</y>
      <w>162</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Struct&gt;&gt;
ohmPf::Laser2dParams
--
zhit : std::double
zphi : std::double
...</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1197</x>
      <y>720</y>
      <w>216</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>ohmPf::TsdMap
--
- _map : obviously::tsdGrid &lt;-- ?
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1431</x>
      <y>720</y>
      <w>216</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>ohmPf::OccMap
--
- _map : obviously::tsdGrid &lt;-- ?
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1296</x>
      <y>666</y>
      <w>27</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1521</x>
      <y>666</y>
      <w>27</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>999</x>
      <y>270</y>
      <w>144</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Struct&gt;&gt;
ohmPf::FilterParams
--
sampleMin : std::int
sampleMax : std::int
...</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1008</x>
      <y>828</y>
      <w>567</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>ohmPf::GaussianPdf
--

--
+ getRandomSample(mu : Eigen::Vector3d, sigmaT : std::double, sigmaPhi : std::double) : ohmPf::Sample_t
+ getRandomValue(mu : std::double, sigma : std::double) : std::double
+ (getProbability(x : std::double, mu : std::double, sigma std::double) : std::double)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>63</y>
      <w>450</w>
      <h>360</h>
    </coordinates>
    <panel_attributes>Ablage
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>9</x>
      <y>99</y>
      <w>189</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>ohmPf::Pose_t
--
+ _pose : Eigen::Vector
--
+ getPhiRad() : std::double
+ getPhiDeg() : std::double
+ getX() : std::double
+ getY() : std::double
+ getPose() : Eigen::Vector</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>234</x>
      <y>117</y>
      <w>162</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>ohmPf::Sample_t
--
- _pose : omhPf::Pose_t
- _weight : std::double</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>657</x>
      <y>711</y>
      <w>360</w>
      <h>81</h>
    </coordinates>
    <panel_attributes>ohmPf::CeilCam
--
- _params : ohmPf::CeilCamParams
--
+ setParams(params : ohmPf::CeilCamParams) : bool
+ updateFilter(filter : ohmPf::Filter *) : std::bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>243</x>
      <y>585</y>
      <w>162</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Struct&gt;&gt;
ohmPf::CeilCamParams
--
foo : std::double
bar : std::double
...</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
